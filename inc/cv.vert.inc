const char *cv_vert_src =
"#version 460\n"
"\n"
"layout(location = 0) in vec3 in_pos;\n"
"layout(location = 1) in vec4 in_color;\n"
"layout(location = 2) in vec2 in_texCoord;\n"
"layout(location = 3) in vec4 in_cvPos;\n"
"layout(location = 4) in vec2 in_texOffset;\n"
"\n"
"out vec4 v_color;\n"
"out vec2 v_texCoord;\n"
"\n"
"uniform mat4 u_world;\n"
"uniform mat4 u_view;\n"
"uniform mat4 u_proj;\n"
"uniform vec2 u_windowSize;\n"
"\n"
"uniform vec4 u_matEmissive;	// used as inactive\n"
"uniform vec4 u_matAmbient;	// used as active\n"
"\n"
"void main()\n"
"{\n"
"	vec3 Vw = vec3(u_world * vec4(in_cvPos.xyz, 1.0));\n"
"	vec3 Vv = vec3(u_view * vec4(Vw, 1.0));\n"
"	gl_Position = u_proj * vec4(Vv, 1.0);\n"
"//	gl_Position.xy += in_pos.xy*7/u_windowSize*gl_Position.w;\n"
"\n"
"	gl_Position.xy *= u_windowSize/2/gl_Position.w;\n"
"	gl_Position.xy = floor(gl_Position.xy) + 0.5;\n"
"	gl_Position.xy += in_pos.xy*3.5;\n"
"	gl_Position.xy /= u_windowSize/2/gl_Position.w;\n"
"\n"
"/*\n"
"	vec2 screen = floor((gl_Position.xy/gl_Position.w + 1)/2 * u_windowSize);\n"
"	screen += in_pos.xy*3.5;\n"
"	gl_Position.xy = (screen/u_windowSize *2 -1)*gl_Position.w;\n"
"*/\n"
"\n"
"	v_color = mix(u_matEmissive, u_matAmbient, in_cvPos.w);\n"
"	v_texCoord = in_texCoord + in_texOffset;\n"
"}\n"
;
